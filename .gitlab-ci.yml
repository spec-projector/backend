image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TEST_IMAGE: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
  DOCKER_DEV_IMAGE: ${CI_REGISTRY_IMAGE}:dev
  DOCKER_PROD_IMAGE: ${CI_REGISTRY_IMAGE}:prod
  GIT_STRATEGY: none

services:
  - docker:dind

stages:
  - quality
  - build
  - test
  - publish

quality:
  image: junte/python-quality
  stage: quality
  variables:
    GIT_DEPTH: 5
    GIT_STRATEGY: fetch
  script:
    - make check_quality

build:
  stage: build
  variables:
    GIT_DEPTH: 5
    GIT_STRATEGY: fetch
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t $DOCKER_TEST_IMAGE -f docker/Dockerfile .
    - docker push $DOCKER_TEST_IMAGE

test:
  image: $DOCKER_TEST_IMAGE
  stage: test
  variables:
    DJANGO_ENV: 'test'
  services:
    - postgres
  script:
    - cd /var/www
    - pip install pytest-django pytest-xdist pytest-cov factory-boy
    - pytest -n auto --dist=loadscope --cov=apps --cov-report=html:coverage_html
    - mkdir $CI_PROJECT_DIR/coverage
    - coverage report -m > $CI_PROJECT_DIR/coverage/report.log
    - cat $CI_PROJECT_DIR/coverage/report.log | tail -n 1
    - mv coverage_html $CI_PROJECT_DIR/coverage/html
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    paths:
      - coverage
